version: '3.8'

services:
  # Redis for coordination, rate limiting, and message queue
  redis:
    image: redis:7-alpine
    container_name: taskqueue-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Scheduler service
  scheduler:
    build:
      context: .
      dockerfile: build/scheduler.Dockerfile
    container_name: taskqueue-scheduler
    ports:
      - "8080:8080"  # Main service port
      - "8081:8081"  # Health check port
      - "9090:9090"  # Metrics port
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_ADDR=redis:6379
    volumes:
      - ./config:/app/config:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Worker service (can scale this)
  worker:
    build:
      context: .
      dockerfile: build/worker.Dockerfile
    container_name: taskqueue-worker
    ports:
      - "8090:8090"  # Main service port
      - "8092:8092"  # Health check port
      - "9091:9091"  # Metrics port
    depends_on:
      redis:
        condition: service_healthy
      scheduler:
        condition: service_healthy
    environment:
      - REDIS_ADDR=redis:6379
    volumes:
      - ./config:/app/config:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8092/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Additional worker for testing load balancing
  worker-2:
    build:
      context: .
      dockerfile: build/worker.Dockerfile
    container_name: taskqueue-worker-2
    ports:
      - "8093:8090"  # Main service port
      - "8094:8092"  # Health check port
      - "9092:9091"  # Metrics port
    depends_on:
      redis:
        condition: service_healthy
      scheduler:
        condition: service_healthy
    environment:
      - REDIS_ADDR=redis:6379
    volumes:
      - ./config:/app/config:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8092/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Mock HTTP server for testing task execution
  mock-api:
    image: kennethreitz/httpbin
    container_name: taskqueue-mock-api
    ports:
      - "8000:80"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/status/200"]
      interval: 5s
      timeout: 3s
      retries: 3

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: taskqueue-network